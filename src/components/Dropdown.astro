---
import { Icon } from 'astro-icon/components';
import type { HTMLAttributes } from 'astro/types';

interface Props extends HTMLAttributes<"dialog"> {
  id: string;
  labelledBy?: string;
  icon?: string;
  theme?: "outlined" | "tonal" | "filled" | "elevated";
  classes?: string;
}

const {
  id,
  labelledBy,
  theme,
  classes = '',
  ...rest
} = Astro.props;
---

<style>
  /* Popover Base */
  [popover] {
    box-shadow: var(--shadow-md);
    border-radius: var(--radius-md);
    margin-block: 0;
    margin-inline: 0;
    overflow: visible;
    padding: 0;
    min-width: 150px;
    position: absolute;
    inset: auto;
  }

  /* Popover Style */
  .popover-inner {
    /* Triangle dimension */
    --base: 1.5em; /* triangle base */
    --height: .75em; /* triangle height */
    --position: 50%; /* triangle position [0%:left | 50%:center | 100%:right] */
    /* Container */
    --radius: var(--radius-md); /* radius */
    --background: var(--color-surface-1); /* background color */

    border: 1px solid var(--background);
    background: var(--background);
    padding-block: var(--spacing-2xs);
    text-align: center;
    border-radius: min(var(--radius),var(--position) - var(--base)/2) min(var(--radius),100% - var(--position) - var(--base)/2) var(--radius) var(--radius)/var(--radius);
    clip-path: polygon(0 0,0 100%,100% 100%,100% 0, min(100%,var(--position) + var(--base)/2) 0,
      var(--position) calc(-1*var(--height)),
      max(0%, var(--position) - var(--base)/2) 0);
    
    border-image: conic-gradient(var(--background) 0 0) fill 0/
      0 calc(100% - var(--position) - var(--base)/2) var(--radius) calc(var(--position) - var(--base)/2)/
      var(--height) 0 0 0; 
}

/* Transition */
[popover] {
  --duration: 1s;
  --timing-function: var(--ease-spring-2);

  transition: 
    display var(--duration) var(--timing-function),
    transform var(--duration) var(--timing-function),
    opacity var(--duration) var(--timing-function);
  transition-behavior: allow-discrete; /* [!] Be sure to write this after the transition */
}

/* Ending | Off Stage (for exiting) */
[popover] {
  transform: scale(0.9);
  opacity: 0;
}

/* On Stage */
[popover]:popover-open {
  transform: translateY(1rem) scale(1);
  opacity: 1;
}

/* Starting | Off Stage (for entering) */
@starting-style {
  [popover]:popover-open {
    transform: translateY(3rem);
    opacity: 0;
  }
}
</style>

<!-- [2] The popover container -->

  <dialog
    popover="auto"
    id={id}
    role="menu"
    aria-labelledby={labelledBy}
    class:list={[theme, classes]}
    {...rest}
    tabindex="-1"
  >
  <div class="popover-inner">
    <slot />
  </div>
  </dialog> 
