---
import { Icon } from 'astro-icon/components';
import type { HTMLAttributes } from 'astro/types';

interface Props extends HTMLAttributes<"button"> {
  type?: "button" | "submit" | "reset";
  theme?: "outlined" | "tonal" | "filled" | "elevated";
  size?: "sm" | "lg";
  shape?: "square" | "circle" | "pill";
  varient?: "icon";
  text?: string;
  icon?: string;
  classes?: string;
}

const { 
  type = "button", 
  size,
  theme,
  varient, 
  shape,
  text, 
  icon,
  classes, 
  ...rest 
  } = Astro.props;
---

<style is:global>
  @layer components {
    /* General Button Styles */
    :is(.button, [type=button], [type=submit], [type=reset]) {
      /* Props */
      --bg-color: transparent;
      --border-color: transparent;
      --border-radius: var(--radius-md);
      --font-size: initial;
      --min-height: 2.375rem;
      --text-color: light-dark(var(--color-purple-7), var(--color-purple-3));
      --button-ripple-duration: 0.5s;
      --button-ripple-size: 100%;

      /* General Button Styles */
      align-items: center;
      background: var(--bg-color) var(--ripple, none);
      border-radius: var(--border-radius);
      border: 1px solid var(--border-color);
      color: var(--text-color);
      display: inline-flex;
      font-size: var(--font-size);
      font-weight: 600;
      gap: var(--spacing-xs);
      justify-content: center;
      min-block-size: var(--min-height);
      padding-block: 0.5ex;
      padding-inline: 1.5ex;
      text-align: center;
      text-decoration: none;
      user-select: none;

      /* Default Disabled Button Styles */
      &[disabled] {
        cursor: not-allowed;
        opacity: 0.64;
      }

      /* Color & Ripple Effect | Motion OK  */
      @media (prefers-reduced-motion: no-preference) {
        transition:
          background-color 0.2s var(--ease-out-3),
          box-shadow 0.2s var(--ease-out-3),
          border-color 0.2s var(--ease-out-3),
          color 0.2s var(--ease-out-3),
          outline-offset 0.05s var(--ease-1);
          background-position: center;

        /* Hover and Active Effects */
        &:not([disabled]) {
          &:not(:active):hover {
            --ripple: radial-gradient(circle, transparent 1%, var(--bg-color) 1%) center/15000%;
            transition: background var(--button-ripple-duration);
          }

          &:hover:active {
            background-size: var(--button-ripple-size);
            transition: background 0s;
          }
        }
      }

      /* Hover & Pressed background‑color change */
      &:not([disabled]) {
        &:not(:active):hover {
          --bg-color: light-dark(
            oklch(from var(--color-purple-4) l 0.01 h / 20%),
            oklch(from var(--color-purple-4) l 0.01 h / 10%)
          );
        }

        &:hover:active {
          --bg-color: light-dark(
            oklch(from var(--color-purple-4) l 0.06 h / 30%),
            oklch(from var(--color-purple-4) l 0.06 h / 40%)
          );
        }
      }

      /* Disabled Text Color */
      &[disabled] {
        --text-color: color-mix(
          in oklch,
          var(--color-text-2) 90%,
          var(--color-surface-1)
        );
      }

      /* Icon-only Button */
      &:is(:has(svg), &.icon) {
        gap: 1ex;
        svg {
          max-block-size: 0.7lh;
          color: currentColor;
        }
      }

      /* Button Size Variations */
      &.sm {
        --min-height: 1.875rem;
        padding-block: 0;
        padding-inline: 1ex;
      }

      &.lg {
        --min-height: 2.875rem;
        padding-inline: 4ex;
      }

      /* Button Shape Variations */
      &.square {
        --border-radius: var(--radius-2);
      }
      &:is(.circle, .pill) {
        --border-radius: var(--radius-ellipse);
      }
      &.circle {
        aspect-ratio: var(--aspect-square);
        padding: 0;
      }

      /* Button Variants */
      &.outlined {
        --bg-color: var(--color-surface-1);
        --border-color: light-dark(var(--color-purple-9), var(--color-purple-4));
        --text-color: light-dark(var(--color-purple-9), var(--color-purple-4));

        /* Hover & Pressed background‑color change */
        &:not([disabled]) {
          &:not(:active):hover {
            --bg-color: var(--color-purple-4);
            --border-color: var(--color-purple-4);
            --text-color: var(--color-gray-0);
          }

          &:active {
            --bg-color: var(--color-purple-9);
            --border-color: var(--color-purple-9);
            --text-color: var(--color-gray-0);
          }
        }

        /* Disabled Outlined Button */
        &[disabled] {
          --bg-color: transparent;
          --border-color: color-mix(
            in oklch,
            var(--color-text-1) 50%,
            var(--color-purple-1)
          );
          --text-color: color-mix(
            in oklch,
            var(--color-text-1) 70%,
            var(--color-surface-1)
          );
        }
      }

      &.tonal {
        --bg-color: var(--color-purple-3);
        --text-color: var(--color-purple-13);

        &:not([disabled]) {
          &:not(:active):hover {
            --bg-color: var(--color-purple-4);
            --border-color: var(--color-purple-4);
          }

          &:active {
            --bg-color: var(--color-purple-5);
            --border-color: var(--color-purple-5);
          }
        }

        /* Disabled Tonal Button */
        &[disabled] {
          --bg-color: color-mix(
            in oklch,
            var(--color-text-1) 8%,
            var(--color-surface-3)
          );
          --text-color: color-mix(
            in oklch,
            var(--color-text-1) 70%,
            var(--color-surface-3)
          );
        }
      }

      &.filled {
        --bg-color: var(--color-purple-8);
        --text-color: var(--color-gray-1);

        &:not([disabled]) {
          &:not(:active):hover {
            --bg-color: var(--color-purple-10);
            --border-color: var(--color-purple-10);
          }

          &:active {
            --bg-color: var(--color-purple-9);
            --border-color: var(--color-purple-9);
          }
        }

        /* Disabled Filled Button */
        &[disabled] {
          --bg-color: color-mix(
            in oklch,
            var(--color-text-2) 20%,
            var(--color-surface-2)
          );
          --text-color: color-mix(
            in oklch,
            var(--color-text-4) 70%,
            var(--color-surface-2)
          );
        }
      }

      &.elevated {
        --bg-color: light-dark(
          color-mix(in oklch, var(--color-gray-1) 97%, var(--color-purple-15)),
          color-mix(in oklch, var(--color-gray-11) 97%, var(--color-purple-1))
        );
        --ripple-color: light-dark(
          color-mix(in oklch, var(--color-gray-1) 80%, var(--color-purple-15)),
          color-mix(in oklch, var(--color-gray-13) 80%, var(--color-purple-1))
        );
        --text-color: light-dark(var(--color-purple-9), var(--color-purple-3));

        box-shadow:
          0px 3px 1px -2px oklch(0 0 0 / 20%),
          0px 2px 2px 0px oklch(0 0 0 / 14%),
          0px 1px 5px 0px oklch(0 0 0 / 12%);

        /* Hover & Pressed background‑color change  */
        &:not([disabled]) {
          &:not(:active):hover {
            --ripple: radial-gradient(
              circle,
              transparent 1%,
              var(--ripple-color) 1%
            )
            center/15000%;
            --bg-color: light-dark(
              color-mix(in oklch, var(--color-gray-2) 93%, var(--color-purple-8)),
              color-mix(in oklch, var(--color-gray-13) 93%, var(--color-purple-8))
            );
          }

          &:hover:active {
            --bg-color: light-dark(
              color-mix(in oklch, var(--color-gray-2) 91%, var(--color-purple-8)),
              color-mix(in oklch, var(--color-gray-13) 91%, var(--color-purple-8))
            );
          }
        }

        /* Disabled Elevated Button */
        &[disabled] {
          --bg-color: color-mix(
            in oklch,
            var(--text-color-2) 8%,
            var(--surface-elevated)
          );
          --text-color: color-mix(
            in oklch,
            var(--text-color-2) 70%,
            var(--surface-elevated)
          );
        }
      }
    }

    /* File Input Styles */
    input[type="file"] {
      align-self: flex-start;
      border-radius: var(--radius-2);
      border: var(--border-size-1) solid var(--surface-filled);
      box-shadow: var(--inner-shadow-4);
      color: var(--text-color-2-contrast);
      cursor: initial;
      max-inline-size: 100%;
      padding: 0;
    }

    /* File Input Button Styling */
    input[type="file"]::-webkit-file-upload-button,
    input[type="file"]::file-selector-button {
      cursor: pointer;
      margin-inline-end: var(--size-relative-6);
    }
  }

  .spring {
      transition: 
        transform 1s var(--ease-spring-5),
        box-shadow 1s var(--ease-spring-5),
        outline-offset 145ms var(--ease-4);
        
        &:active {
        transform: scale(.9);
      }
    }
</style>

<button {type} class:list={[size, theme, shape, varient, classes]} {...rest}>
  { icon && <Icon name={icon} /> }
  <span class:list={[varient === 'icon' && 'sr-only']}>
    <slot/>
    {text}
  </span>
</button>