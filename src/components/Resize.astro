---
const {
  initialWidth = 400,
  initialHeight = 200,
  minWidth = 200,
  maxWidth = 800,
  minHeight = 100,
  maxHeight = 600
} = Astro.props;
---
<div
  class="resizable"
  style={`width: ${initialWidth}px; height: ${initialHeight}px; --min-w: ${minWidth}px; --max-w: ${maxWidth}px; --min-h: ${minHeight}px; --max-h: ${maxHeight}px;`}
>
  <slot />
  <!-- Handles -->
  <div class="resize-handle handle-right"></div>
  <div class="resize-handle handle-bottom"></div>
  <div class="resize-handle handle-corner"></div>
</div>

<script is:inline>
  const container    = document.querySelector('.resizable');
  const handleRight  = container.querySelector('.handle-right');
  const handleBottom = container.querySelector('.handle-bottom');
  const handleCorner = container.querySelector('.handle-corner');

  function startResize(e, type) {
    e.preventDefault();
    const startX = e.clientX;
    const startY = e.clientY;
    const { width: startW, height: startH } = container.getBoundingClientRect();

    function doResize(ev) {
      if (type === 'width' || type === 'both') {
        let newW = startW + (ev.clientX - startX);
        newW = Math.max(newW, parseInt(getComputedStyle(container).getPropertyValue('--min-w')));
        newW = Math.min(newW, parseInt(getComputedStyle(container).getPropertyValue('--max-w')));
        container.style.width = `${newW}px`;
      }
      if (type === 'height' || type === 'both') {
        let newH = startH + (ev.clientY - startY);
        newH = Math.max(newH, parseInt(getComputedStyle(container).getPropertyValue('--min-h')));
        newH = Math.min(newH, parseInt(getComputedStyle(container).getPropertyValue('--max-h')));
        container.style.height = `${newH}px`;
      }
    }

    function stopResize() {
      window.removeEventListener('mousemove', doResize);
      window.removeEventListener('mouseup', stopResize);
    }

    window.addEventListener('mousemove', doResize);
    window.addEventListener('mouseup', stopResize);
  }

  handleRight.addEventListener('mousedown', e => startResize(e, 'width'));
  handleBottom.addEventListener('mousedown', e => startResize(e, 'height'));
  handleCorner.addEventListener('mousedown', e => startResize(e, 'both'));
</script>

<style>
.resizable {
  position: relative;
  overflow: hidden;
  border: 1px solid var(--color-border);
}

.resize-handle {
  position: absolute;
  background: rgba(0,0,0,0.1);
}

.handle-right {
  top: 0; bottom: 0; right: 0; width: 8px; cursor: ew-resize;
}

.handle-bottom {
  left: 0; right: 0; bottom: 0; height: 8px; cursor: ns-resize;
}

.handle-corner {
  width: 12px; height: 12px; bottom: 0; right: 0; cursor: nwse-resize;
}

.resize-handle:hover {
  background: rgba(0,0,0,0.2);
}
</style>