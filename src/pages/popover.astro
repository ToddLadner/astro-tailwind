---
import Layout from '@layouts/Layout.astro';
import Dialog from '@components/Dialog.astro';
import Button from '@components/Button.astro';
import Dropdown from '@components/Dropdown.astro';
import Tooltip from '@components/Tooltip.astro';
import Avatar from '@components/Avatar.astro';

import userAvatar from '@images/killer-mike.jpg';
import altUserAvatar from '@images/elp.jpg';

const { 
	title = "My Astro Blog",
	description = "My musings about the Astro framework",
	...rest 
} = Astro.props;
---

<style>
  #new-dropdown { anchor-name: --my-otheranchor; }
  #dd-menu {
    position-anchor: --my-otheranchor;
    position-area: bottom center;
  } 

  #my-dropdown { anchor-name: --my-anchor; }
  #my-menu {
    position-anchor: --my-anchor;
    position-area: bottom ;
    margin: .25rem;
    /* position-try: flip-block, flip-inline; */
    position-try-fallbacks: --bottom-center, --bottom-left, --top-center, --bottom-right;
  }
  @position-try --bottom-center {
    position-area: bottom center;
  }
  @position-try --bottom-left {
    position-area: bottom left;
  }
  @position-try --top-center { 
    position-area: top center; 
  }
  @position-try --bottom-right { 
    position-area: bottom right;
  }
  /* Tooltip */
  #info-btn { anchor-name: --my-tipanchor; }
  #tooltip-info {
    position-anchor: --my-tipanchor;
    position-area: bottom;
    /* position-try: flip-block, flip-inline;  */
    position-try-fallbacks: --bottom-center, --bottom-left, --top-center, --bottom-right;
  } 

  [role="menuitem"] { width: 100%; justify-content: unset; }

  /**/
#my-anchor-positioning {
  anchor-name: --my-anchor-positioning;
}

#my-target-positioning {
  position: absolute;
  width: 10rem;
  margin: 0;
  top: anchor(--my-anchor-positioning bottom);
  left: anchor(--my-anchor-positioning right, 0rem);
  
  & :popover-open { display: block;}
}

</style>

<Layout {title} {description}>
  <main class="bg-surface-2 stack">
    <!-- Header -->
    <article class="p-inline-max py-2xl bg-surface-3 stack stack-md">
      <h1>Popover</h1>
      <p class="text-md leading-lg">The Popover API provides developers with a standard, consistent, flexible mechanism for displaying popover content on top of other page content. Popover content can be controlled either declaratively using HTML attributes, or via JavaScript.</p>
    </article>
    
    <article class="p-inline-max py-lg stack stack-md">
      <p>Components</p>
      <h2>Dropdown</h2>
  
      <p>A minimally styled window overlaid on the Main Content. By design the Dialog is minimal with zero content to allow for both modal and non-modal use.</p>

      <span id="info-btn">Hover me</span>
      <Tooltip id="tooltip-info" for="info-btn">
        This is an informative tooltip.
      </Tooltip>

      <Button 
        id="new-dropdown" 
        popovertarget="dd-menu"
        aria-controls="dd-menu"
        aria-haspopup="menu"
        aria-expanded="false"
        aria-label="Help menu"
      >
        ?
      </Button>
      <Dropdown id="dd-menu" labelledBy="new-dropdown">
        <ul role="list" class="my-[0]">
          <li><Button role="menuitem">Profile</Button></li>
          <li><Button role="menuitem">Settings</Button></li>
          <li><Button role="menuitem">Log out</Button></li>
          <hr>
          <li><Button role="menuitem">Log out</Button></li>
        </ul>
      </Dropdown>

      <div class="py-md bg-surface-3 flex justify-center">
        <Button
          id="my-dropdown" 
          popovertarget="my-menu"
          aria-controls="my-menu"
          aria-haspopup="menu"
          aria-expanded="false"
          aria-label="Help menu"
          variant='icon-button'
          shape='circle'
        >
          <Avatar 
            src={userAvatar} 
            label="User Avatar" 
            size="md" 
            badge="success" 
          />
        </Button>
        <Dropdown id="my-menu" labelledBy="my-dropdown">
          <ul role="list" class="my-[0]">
            <li><Button role="menuitem">Profile</Button></li>
            <li><Button role="menuitem">Settings</Button></li>
            <li><Button role="menuitem">Log out</Button></li>
            <hr>
            <li><Button role="menuitem">Log out</Button></li>
          </ul>
        </Dropdown>
      </div>
    </article>
    
    <article class="p-inline-max py-lg stack stack-md">
      <button id="my-anchor-positioning" popovertarget="my-target-positioning" class="anchor">Anchor</button>
      <div id="my-target-positioning" class="target" popover>Target</div>
    </article>
  </main>
</Layout>

<script is:inline>
  // Listen for *any* popover toggling:
  document.addEventListener('toggle', (e) => {
    const pop = (e.target);
    if (!pop.hasAttribute('popover') || !pop.id) return;

    // Find the matching control by its popovertarget:
    const btn = document.querySelector(
      `[popovertarget="${pop.id}"]`
    );
    if (btn) {
      btn.setAttribute(
        'aria-expanded',
        e.newState === 'open' ? 'true' : 'false'
      );
    }
  });
</script>