---
import Layout from '../layouts/Layout.astro';

const { 
	title = "My Astro Blog",
	description = "My musings about the Astro framework",
	...rest 
} = Astro.props;
---

<Layout {title} {description}>
	<main class='p-inline-max bg-surface-2'>
    <div class="flex flex-col stack-lg">
			<p>live and in color</p>
	    <h1 class="test-heading">Tailwind for UX / UI <br> & Developers</h1>
	    <p>This color scheme and font represents your brand.</p>
		</div>
		<div class="emoji-rate emoji-rate--with-comment js-emoji-rate">
  <div class="emoji-rate__icons cd-text-center">
    <p class="cd-margin-bottom-sm">Was this page helpful?</p>
  
    <ul class="emoji-rate__list">
      <li>
        <input id="emoji-rate-option-no" class="cd-sr-only emoji-rate__native-input" type="radio" name="emoji-rate-options">
  
        <label class="emoji-rate__custom-input emoji-rate__custom-input--no" for="emoji-rate-option-no">
          <span class="cd-sr-only">No</span>
  
          <svg class="emoji-rate__icon" viewBox="0 0 40 40" aria-hidden="true">
            <circle id="emoji-rate-no-bg" cx="20" cy="20" r="20" fill="hsl(240, 4%, 85%)" />
            <g id="emoji-rate-no-eyes">
              <circle cx="11.5" cy="19.5" r="2.5" fill="currentColor" />
              <path d="M7,15a18.059,18.059,0,0,0,4,2,18.06,18.06,0,0,0,5,1" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" />
              <circle cx="28.5" cy="19.5" r="2.5" fill="currentColor" />
              <path d="M33,15a18.059,18.059,0,0,1-4,2,18.06,18.06,0,0,1-5,1" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" />
            </g>
            <path id="emoji-rate-no-mouth" d="M16,29a5,5,0,0,1,8,0" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" />
          </svg>
        </label>
      </li>
  
      <li>
        <input id="emoji-rate-option-partially" class="cd-sr-only emoji-rate__native-input" type="radio" name="emoji-rate-options">
  
        <label class="emoji-rate__custom-input emoji-rate__custom-input--partially" for="emoji-rate-option-partially">
          <span class="cd-sr-only">Partially</span>
  
          <svg class="emoji-rate__icon" viewBox="0 0 40 40" aria-hidden="true">
            <circle id="emoji-rate-partially-bg" cx="20" cy="20" r="20" fill="hsl(240, 4%, 85%)" />
            <g id="emoji-rate-partially-eyes">
              <circle cx="11.5" cy="19.5" r="2.5" fill="currentColor" />
              <circle cx="28.5" cy="19.5" r="2.5" fill="currentColor" />
            </g>
            <line id="emoji-rate-partially-mouth" x1="15" y1="28" x2="25" y2="28" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"/>
          </svg>
        </label>
  
        <svg class="emoji-rate__hand-icon" viewBox="0 0 40 40" aria-hidden="true">
          <path id="emoji-rate-partially-hand" d="M17.279,28.031,4.323,29.1l-.33-3.986a2,2,0,0,0-3.986.33l.825,9.966a5.005,5.005,0,0,0,5.4,4.57l3.987-.33a3,3,0,0,0,2.742-3.237l-.33-3.986,4.983-.413a2,2,0,1,0-.33-3.986Z" fill="hsl(35, 79%, 48%)"/>
        </svg>
      </li>
  
      <li>
        <input id="emoji-rate-option-yes" class="cd-sr-only emoji-rate__native-input" type="radio" name="emoji-rate-options">
  
        <label class="emoji-rate__custom-input emoji-rate__custom-input--yes" for="emoji-rate-option-yes">
          <span class="cd-sr-only">Yes</span>
  
          <svg class="emoji-rate__icon" viewBox="0 0 40 40" aria-hidden="true">
            <circle id="emoji-rate-yes-bg" cx="20" cy="20" r="20" fill="hsl(240, 4%, 85%)" />
            <g id="emoji-rate-yes-eyes">
              <path d="M9,19a3,3,0,0,1,6,0" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" />
              <path d="M31,19a3,3,0,0,0-6,0" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" />
            </g>
            <g id="emoji-rate-yes-mouth">
              <path d="M26,25H14a1,1,0,0,0-1,1,7,7,0,0,0,14,0A1,1,0,0,0,26,25Z" fill="currentColor" />
              <path id="emoji-rate-yes-tongue" d="M20,29a9.942,9.942,0,0,0-5.317,1.541,6.978,6.978,0,0,0,10.634,0A9.942,9.942,0,0,0,20,29Z" fill="hsl(225, 4%, 47%)" />
            </g>
          </svg>
        </label>
      </li>
    </ul>
  </div>

  <div class="emoji-rate__comment cd-hide js-emoji-rate__comment">
    <label class="cd-form-label" for="emoji-rate-msg">Share your feedback:</label>

    <textarea class="cd-form-control cd-width-100%" rows="4" name="emoji-rate-msg" id="emoji-rate-msg"></textarea>

    <div class="cd-margin-top-2xs cd-text-right">
      <input class="cd-btn cd-btn--primary" type="button" value="Submit">
    </div>
  </div>
</div>
  </main>
</Layout>


<style>
	@reference "../../src/css/main.css";
	
	.test-heading {
		@apply text-4xl p-xl text-red-7 bg-teal-2 rounded-br-xl;
		
		@variant dark {
			@apply text-4xl p-sm text-red-7 bg-teal-2 rounded-bl-xl;
			/* @variant hover {
				@apply bg-teal-6;
			} */
		}
	
		/* &:hover { 
			background-color: oklch( from var(--color-teal-2) l c h / .80 ); 
		} */
		&:hover { 
			background-color: --alpha(var(--color-teal-2) / 80% ); 
		}
	}
	
	.swatch {
		padding: var(--spacing-sm); 
		width: var(--spacing-3xl);
		height: auto;
		border-radius: var(--radius-md);
		box-shadow: var(--shadow-md);
		border: 1px solid var(--surface-2);
	}
	
	.palette {
			/* Stack space */
			--space: var(--spacing-xs);
			display: flex;
			gap: var(--spacing-xs);
		}
	
		li { 
				display: flex;
				flex-direction: column;
				gap: var(--spacing-xs);
			}
	
		.theme > {
			*:nth-child(1) .swatch { background-color: var(--brand) } 
			*:nth-child(2) .swatch { background-color: var(--surface-2) }
			*:nth-child(3) .swatch { background-color: var(--surface-3) } 
			*:nth-child(4) .swatch { background-color: var(--surface-4) }
			*:nth-child(5) .swatch { background-color: var(--surface-3) } 
			*:nth-child(6) .swatch { background-color: var(--surface-4) }
		}
	
		.grayscale > {
			*:nth-child(1) .swatch { background-color: var(--surface-1) } 
			*:nth-child(2) .swatch { background-color: var(--surface-2) }
			*:nth-child(3) .swatch { background-color: var(--surface-3) } 
			*:nth-child(4) .swatch { background-color: var(--surface-4) }
		}
	
	
	.nested-palette { 
		max-width: 55%;
		background-color: var(--color-surface-0); 
		border-radius: var(--radius-md);
	}
	.nested-palette div {
		padding: var(--spacing-xs);
		margin: var(--spacing-sm);
		border-radius: var(--radius-md);
	}
	
	.prop {
		background-color: var(--color-surface-2);
		border: 1px solid var(--color-surface-3);
		padding: var(--spacing-3xs);
		border-radius: var(--radius-md);
		display: inline-flex;
	}

	/* -------------------------------- 



-------------------------------- */
:root {
  --emoji-rate-size: 40px;
}

.emoji-rate__list > * {
  position: relative;
}

.emoji-rate__custom-input {
  position: relative;
  display: block;
  font-size: var(--emoji-rate-size);
  width: 1em;
  height: 1em;
  border-radius: 50%;
  overflow: hidden;
  cursor: pointer;
  transition: transform 0.3s var(--ease-out-back);
}

.emoji-rate__icon {
  display: block;
  width: inherit;
  height: inherit;
  transition: color 0.3s;
}
.emoji-rate__icon * {
  transition: fill, stroke;
  transition-duration: 0.3s;
}

.emoji-rate__hand-icon {
  display: block;
  font-size: var(--emoji-rate-size);
  width: 1em;
  height: 1em;
  position: absolute;
  left: 0;
  bottom: 0;
  pointer-events: none;
  transition: transform 0.3s;
}

#emoji-rate-partially-hand {
  opacity: 0;
}

.emoji-rate__native-input + .emoji-rate__custom-input--no .emoji-rate__icon #emoji-rate-no-eyes {
  transform: translateY(0) translateX(0);
}
.emoji-rate__native-input + .emoji-rate__custom-input--no .emoji-rate__icon #emoji-rate-no-mouth {
  transform: translateY(0) translateX(0);
}
.emoji-rate__native-input + .emoji-rate__custom-input--yes .emoji-rate__icon #emoji-rate-yes-eyes {
  transform: translateY(0) scale(1);
}
.emoji-rate__native-input + .emoji-rate__custom-input--yes .emoji-rate__icon #emoji-rate-yes-mouth {
  transform-origin: 50% 70%;
  transform: translateY(0) scale(1);
}
.emoji-rate__native-input + .emoji-rate__custom-input--partially .emoji-rate__icon #emoji-rate-partially-eyes {
  transform-origin: 20px 19.5px;
  transform: translateY(0) scaleY(1);
}
.emoji-rate__native-input + .emoji-rate__custom-input--partially .emoji-rate__icon #emoji-rate-partially-mouth {
  transform-origin: 20px 28px;
  transform: translateY(0) scaleX(1);
}
.emoji-rate__native-input ~ .emoji-rate__hand-icon #emoji-rate-partially-hand {
  transform-origin: 7px 35px;
  opacity: 0;
  transform: translateX(0);
}

.emoji-rate__native-input:checked + .emoji-rate__custom-input,
.emoji-rate__native-input:checked ~ .emoji-rate__hand-icon {
  transform: scale(1.1);
}
.emoji-rate__native-input:checked + .emoji-rate__custom-input--no .emoji-rate__icon {
  color: var(--color-black);
}
.emoji-rate__native-input:checked + .emoji-rate__custom-input--no .emoji-rate__icon #emoji-rate-no-bg {
  fill: var(--color-error-light);
}
.emoji-rate__native-input:checked + .emoji-rate__custom-input--no .emoji-rate__icon #emoji-rate-no-eyes {
  animation: emoji-rate-no-eyes-anim 1.6s;
}
.emoji-rate__native-input:checked + .emoji-rate__custom-input--no .emoji-rate__icon #emoji-rate-no-mouth {
  animation: emoji-rate-no-mouth-anim 1.6s;
}
.emoji-rate__native-input:checked + .emoji-rate__custom-input--yes .emoji-rate__icon {
  color: var(--color-black);
}
.emoji-rate__native-input:checked + .emoji-rate__custom-input--yes .emoji-rate__icon #emoji-rate-yes-bg {
  fill: var(--color-warning);
}
.emoji-rate__native-input:checked + .emoji-rate__custom-input--yes .emoji-rate__icon #emoji-rate-yes-eyes {
  animation: emoji-rate-yes-eyes-anim 1.6s;
}
.emoji-rate__native-input:checked + .emoji-rate__custom-input--yes .emoji-rate__icon #emoji-rate-yes-mouth {
  transform-origin: 50% 70%;
  animation: emoji-rate-yes-mouth-anim 1.6s;
}
.emoji-rate__native-input:checked + .emoji-rate__custom-input--yes .emoji-rate__icon #emoji-rate-yes-tongue {
  fill: var(--color-error);
}
.emoji-rate__native-input:checked + .emoji-rate__custom-input--partially .emoji-rate__icon {
  color: var(--color-black);
}
.emoji-rate__native-input:checked + .emoji-rate__custom-input--partially .emoji-rate__icon #emoji-rate-partially-bg {
  fill: var(--color-warning);
}
.emoji-rate__native-input:checked + .emoji-rate__custom-input--partially .emoji-rate__icon #emoji-rate-partially-eyes {
  animation: emoji-rate-partially-eyes-anim 1.6s;
}
.emoji-rate__native-input:checked + .emoji-rate__custom-input--partially .emoji-rate__icon #emoji-rate-partially-mouth {
  animation: emoji-rate-partially-mouth-anim 1.6s;
}
.emoji-rate__native-input:checked ~ .emoji-rate__hand-icon #emoji-rate-partially-hand {
  animation: emoji-rate-partially-hand-anim 1.6s;
}

.emoji-rate__native-input:focus + .emoji-rate__custom-input {
  box-shadow: 0 0 0 3px hsla(var(--color-warning-h), var(--color-warning-s), var(--color-warning-l), 0.3);
}
.emoji-rate__native-input:focus + .emoji-rate__custom-input--no {
  box-shadow: 0 0 0 3px hsla(var(--color-error-h), var(--color-error-s), var(--color-error-l), 0.25);
}

.emoji-rate__native-input:focus:not(:focus-visible) + .emoji-rate__custom-input {
  box-shadow: none !important;
}

@keyframes emoji-rate-no-eyes-anim {
  0%, 100% {
    transform: translateY(0) translateX(0);
  }
  30%, 40% {
    transform: translateY(4px) translateX(0);
  }
  50% {
    transform: translateY(4px) translateX(-4px);
  }
  60% {
    transform: translateY(4px) translateX(4px);
  }
  70% {
    transform: translateY(4px) translateX(0px);
  }
}
@keyframes emoji-rate-no-mouth-anim {
  0%, 100% {
    transform: translateY(0) translateX(0);
  }
  30%, 40% {
    transform: translateY(2.5px) translateX(0);
  }
  50% {
    transform: translateY(2.5px) translateX(-2.5px);
  }
  60% {
    transform: translateY(2.5px) translateX(2.5px);
  }
  70% {
    transform: translateY(2.5px) translateX(0px);
  }
}
@keyframes emoji-rate-yes-mouth-anim {
  0%, 100% {
    transform: translateY(0) scale(1);
  }
  30%, 40% {
    transform: translateY(-2.5px) scale(1.2);
  }
  55% {
    transform: translateY(0) scale(1.2);
  }
  70% {
    transform: translateY(-2.5px) scale(1.2);
  }
}
@keyframes emoji-rate-yes-eyes-anim {
  0%, 100% {
    transform: translateY(0);
  }
  30%, 40% {
    transform: translateY(-2.5px);
  }
  55% {
    transform: translateY(0);
  }
  70% {
    transform: translateY(-2.5px);
  }
}
@keyframes emoji-rate-partially-eyes-anim {
  0%, 100% {
    transform: translateY(0) scaleY(1);
  }
  30%, 40%, 60%, 70% {
    transform: translateY(-2px) scaleY(1);
  }
  50% {
    transform: translateY(-2px) scaleY(0.1);
  }
}
@keyframes emoji-rate-partially-mouth-anim {
  0%, 100% {
    transform: translateY(0) scaleX(1);
  }
  30%, 70% {
    transform: translateY(-4px) scaleX(0.6);
  }
}
@keyframes emoji-rate-partially-hand-anim {
  0%, 100% {
    opacity: 0;
    transform: translateX(0);
  }
  30%, 70% {
    opacity: 1;
    transform: translateX(3px);
  }
}
	</style>

	<script>

(function() {
  function initEmojiRate(element) {
    var commentSection = element.getElementsByClassName('js-emoji-rate__comment');
    if(commentSection.length == 0) return;
    element.addEventListener('change', function() {
      // show comment input if user selects one of the radio btns
      showComment(commentSection[0]);
    });
  };

  function showComment(comment) {
    var hiddenClass = 'hide';
    if(!comment.classList.contains(hiddenClass)) return;
    // reveal comment section
    comment.classList.remove(hiddenClass);
    var initHeight = 0,
			finalHeight = comment.offsetHeight;
    if(window.requestAnimationFrame && !reducedMotion) {
      setHeight(initHeight, finalHeight, comment, 200, function(){
        // move focus to textarea
        var textArea = comment.querySelector('textarea');
        if(textArea) textArea.focus();
        // remove inline style
        comment.style.height = '';
      }, 'easeInOutQuad');
    }
  };

  function setHeight(start, to, element, duration, cb, timeFunction) {
    var change = to - start,
        currentTime = null;
  
    var animateHeight = function(timestamp){  
      if (!currentTime) currentTime = timestamp;         
      var progress = timestamp - currentTime;
      if(progress > duration) progress = duration;
      var val = parseInt((progress/duration)*change + start);
      if(timeFunction) {
        val = Math[timeFunction](progress, start, to - start, duration);
      }
      element.style.height = val+"px";
      if(progress < duration) {
          window.requestAnimationFrame(animateHeight);
      } else {
        if(cb) cb();
      }
    };
    
    //set the height of the element before starting animation -> fix bug on Safari
    element.style.height = start+"px";
    window.requestAnimationFrame(animateHeight);
  };

  Math.easeInOutQuad = function (t, b, c, d) {
    t /= d/2;
    if (t < 1) return c/2*t*t + b;
    t--;
    return -c/2 * (t*(t-2) - 1) + b;
  };

  var emojiRate = document.getElementsByClassName('js-emoji-rate'),
    reducedMotion = window.matchMedia('(prefers-reduced-motion: reduce)').matches;
  if( emojiRate.length > 0 ) {
		for( var i = 0; i < emojiRate.length; i++) {
			(function(i){initEmojiRate(emojiRate[i]);})(i);
		}
	}
}());
	</script>